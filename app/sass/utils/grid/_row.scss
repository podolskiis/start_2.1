[class~=#{$row}] {
  flex-wrap: wrap;
  display: flex;
  margin-top: -$grid-gutter;
  margin-left: -$grid-gutter/2;
  margin-right: -$grid-gutter/2;
  & + & {
    margin-top: 0;
  }
}

@mixin row($breakpoint) {
  // horizontal: justify-content
  [class~=#{$row+$mod+$breakpoint}-left] {
    justify-content: flex-start;
  }
  [class~=#{$row+$mod+$breakpoint}-center] {
    justify-content: center;
  }
  [class~=#{$row+$mod+$breakpoint}-right] {
    justify-content: flex-end;
  }
  [class~=#{$row+$mod+$breakpoint}-between] {
    justify-content: space-between;
  }
  [class~=#{$row+$mod+$breakpoint}-around] {
    justify-content: space-around;
  }
  // vertical: align-items
  [class~=#{$row+$mod+$breakpoint}-top] {
    align-items: flex-start;
  }
  [class~=#{$row+$mod+$breakpoint}-middle] {
    align-items: center;
    align-content: center;
  }
  [class~=#{$row+$mod+$breakpoint}-bottom] {
    align-items: flex-end;
  }
  [class~=#{$row+$mod+$breakpoint}-stretch] {
    flex-flow: row wrap;
    align-items: stretch;
    & > [class~=#{$col}] {
      display: flex;
    }
  }
  // flex-wrap
  [class~=#{$row+$mod+$breakpoint}-wrap] {
    flex-wrap: wrap
  }
  [class~=#{$row+$mod+$breakpoint}-nowrap] {
    flex-wrap: nowrap
  }
  // gutter
  @each $gutter-size in $gutter-size-map {
    $sfx: if($gutter-size == $grid-gutter, 'base', '#{strip-units($gutter-size)}');
    $gutter-size: if($gutter-size == $grid-gutter, $grid-gutter, $gutter-size);
    @each $gutter-suffix in 'gutter', 'gutter-x', 'gutter-y' {
      [class~=#{$row+$mod+$breakpoint}-#{$gutter-suffix}-#{$sfx}] {
        @if $gutter-suffix == 'gutter' {
          @include gutter-rw($gutter-size);
        }
        @else if $gutter-suffix == 'gutter-x' {
          @include gutter-rw-x($gutter-size);
        }
        @else if $gutter-suffix == 'gutter-y' {
          @include gutter-rw-y($gutter-size);
        }
      }
    }
  }
}
